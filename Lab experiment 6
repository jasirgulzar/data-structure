#include<stdio.h>
#include<stdlib.h>
#define size 100
int queue[size],front = -1,rear = -1;
int isempty(){
    return (front == -1)?1 : 0;
}
int isfull(){
    return (rear == size-1)?1:0;
}
void inqueue(int data){
    queue[++rear] = data;
    if(front==-1)
    front = rear;
printf("element inserted!!!\n");
}
int dequeue(){
    int data = queue[front];
    if(front==rear)
    front=rear=-1;
else 
front++;
return data;
}
int peek(){
    return queue[front];
}
int display(){
    printf("queue element are :\n");
    for(int i=front;i<=rear;i++){
        printf("%d",queue[i]);
    }
}
int main(){
    while(1){
       printf("1.enqueue\n");
       printf("2.dequeue\n");
       printf("3.peek\n");
       printf("4.display\n");
       printf("5.exit\n");
       int choice,data;
       printf("enter choice :");
       scanf("%d",&choice);
       switch(choice){
        case 1:
        if(isfull())
        printf("queue overflow!!!\n");
        else{
            printf("element element :");
            scanf("%d",&data);
            inqueue(data);
        }
        break;
        case 2:
        if(isempty())
            printf("queue underflow !!!\n");
            else
            printf("%d is dequeue from the queue\n",dequeue());
        break;
        case 3:
        if(isempty())
            printf("queue underflow !!!\n");
            else
            printf("%d element available in front of queue\n", peek());
        break;
        case 4:
        if(isempty())
            printf("queue empty !!!\n");
            else
            display();
        break;
        case 5:
        exit(0);
        default:
        printf("invalid choice !!!!\n");
       }
       printf("\n");
    }
    return 0;
}
